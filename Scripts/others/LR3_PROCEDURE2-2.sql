CREATE OR REPLACE PROCEDURE P_CUSTOMER_INSERT_T_MOD(  
    F_NEW_NAME IN CHAR, 
    F_NEW_SECOND_NAME IN CHAR, 
    F_NEW_AREA_CODE IN CHAR, 
    F_NEW_PHONE_NUMBER IN CHAR, 
    F_ARTIST_NAME IN CHAR, 
    F_WORK_TITLE IN CHAR, 
    F_WORK_COPY IN CHAR, 
    F_PRICE IN NUMBER 
) 
AS 
    ROW_COUNT INTEGER(2); 
    TRANSACTION_ID INT; 
    ARTIST_ID INT; 
    CURSOR TRANSACTION_CURSOR IS 
        SELECT T_TRANSACTION.F_TRANSACTION_ID, T_ARTIST.F_ARTIST_ID 
        FROM T_ARTIST, T_WORK, T_TRANSACTION 
        WHERE T_ARTIST.F_NAME = F_ARTIST_NAME AND    
            T_WORK.F_TITLE = F_WORK_TITLE AND 
            T_WORK.F_COPY = F_WORK_COPY AND 
            T_TRANSACTION.F_CUSTOMER_ID IS NULL AND 
            T_ARTIST.F_ARTIST_ID = T_WORK.F_ARTIST_ID AND 
            T_WORK.F_WORK_ID = T_TRANSACTION.F_WORK_ID; 
 
BEGIN  
    SELECT COUNT(*) INTO ROW_COUNT 
    FROM T_CUSTOMER 
        WHERE F_NAME = F_NEW_NAME AND  
        F_AREA_CODE = F_NEW_AREA_CODE AND  
        F_PHONE_NUMBER = F_NEW_PHONE_NUMBER; 
        
    IF ROW_COUNT > 0 THEN 
        BEGIN 
            DBMS_OUTPUT.PUT_LINE('THE CUSTOMER ALREADY EXISTS'); 
            RETURN; 
        END; 
    END IF; 
 
    INSERT INTO T_CUSTOMER( 
        F_CUSTOMER_ID, 
        F_NAME, 
        F_SECOND_NAME, 
        F_AREA_CODE, 
        F_PHONE_NUMBER 
    ) 
    VALUES( 
        SQ_CUSTOMER_ID.NEXTVAL,  
        F_NEW_NAME,  
        F_NEW_SECOND_NAME, 
        F_NEW_AREA_CODE,  
        F_NEW_PHONE_NUMBER 
    ); 
 
    ROW_COUNT := 0; 
    FOR T_TRANSACTION IN TRANSACTION_CURSOR  
        LOOP 
            TRANSACTION_ID := T_TRANSACTION.F_TRANSACTION_ID; 
            ARTIST_ID := T_TRANSACTION.F_ARTIST_ID; 
            ROW_COUNT := ROW_COUNT + 1; 
        END LOOP; 
     
    IF ROW_COUNT > 1 THEN 
        BEGIN 
            ROLLBACK; 
            DBMS_OUTPUT.PUT_LINE('THE DATA IS INCORRECT'); 
            RETURN; 
        END; 
    END IF; 
 
    IF ROW_COUNT = 0 THEN  
        BEGIN 
            ROLLBACK; 
            DBMS_OUTPUT.PUT_LINE('NO FREE ROWS IN TRANSACTION'); 
            RETURN; 
        END; 
    END IF; 
 
    DBMS_OUTPUT.PUT_LINE(TRANSACTION_ID); 
    UPDATE T_TRANSACTION 
    SET F_CUSTOMER_ID = SQ_CUSTOMER_ID.CURRVAL, 
        F_SALES_PRICE = F_PRICE, F_PURCHASE_DATE = SYSDATE 
    WHERE T_TRANSACTION.F_TRANSACTION_ID = TRANSACTION_ID; 
    DBMS_OUTPUT.PUT_LINE('THE CUSTOMER HAS BEEN ADDED'); 
 
    INSERT INTO T_CUSTOMER_ARTIST_INT ( 
        F_ARTIST_ID,  
        F_CUSTOMER_ID 
    ) 
    VALUES( 
        ARTIST_ID, 
        SQ_CUSTOMER_ID.CURRVAL 
    ); 
END; 
